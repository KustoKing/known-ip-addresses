name: Update Azure Service Tags

on:
  schedule:
    - cron: "0 7 * * *"  # daily at 7 AM UTC
  workflow_dispatch:

permissions:
  id-token: write     # Must be here, top-level
  contents: write     # If you want to commit changes

jobs:
  update-azure-service-tags:
    runs-on: windows-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Azure Login with OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          # no 'auth-type: SERVICE_PRINCIPAL'
          # no 'audience' 
          # => defaults to OIDC

      - name: Retrieve Azure Service Tags via REST
        shell: pwsh
        run: |
          $token = az account get-access-token --resource https://management.azure.com --query accessToken -o tsv
          if (-not $token) {
            Write-Error "No token retrieved."
            exit 1
          }
          $uri = "https://management.azure.com/subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/providers/Microsoft.Network/locations/westeurope/serviceTags?api-version=2024-05-01"
          $headers = @{
            "Authorization" = "Bearer $token"
            "Content-Type"  = "application/json"
          }
          $response = Invoke-RestMethod -Uri $uri -Headers $headers -Method GET

          # Flatten results to CSV
          $allTags = @{}
          foreach ($tag in $response.values) {
            $allTags[$tag.name] = @{
              Tag         = $tag.name
              Region      = $tag.properties.region
              IPAddresses = $tag.properties.addressPrefixes
            }
          }
          $expandedList = foreach ($k in $allTags.Keys) {
            $tagEntry = $allTags[$k]
            foreach ($ip in $tagEntry.IPAddresses) {
              [PSCustomObject]@{
                Tag       = $tagEntry.Tag
                Region    = $tagEntry.Region
                IPAddress = $ip
             
